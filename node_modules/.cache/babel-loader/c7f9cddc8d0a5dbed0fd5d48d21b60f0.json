{"ast":null,"code":"var _jsxFileName = \"G:\\\\03 Projects React\\\\app-tenzi\\\\tenzi\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './index.css';\nimport Boxes from './components/Boxes/Boxes.js';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [box, setBox] = useState(generateBoxes());\n\n  function generateNewBox() {\n    return {\n      value: Math.floor(Math.random() * 6) + 1,\n      isPressed: false,\n      id: nanoid()\n    };\n  }\n\n  function generateBoxes() {\n    const boxes = [];\n\n    for (let i = 0; i < 10; ++i) {\n      boxes.push(generateNewBox());\n    }\n\n    return boxes;\n  }\n\n  function structureOfBox(id) {\n    setBox(prevBox => prevBox.map(box => {\n      return box.id === id ? { ...box,\n        isPressed: !box.isPressed\n      } : box;\n    }));\n  }\n\n  const boxElements = box.map(valueGenerated => /*#__PURE__*/_jsxDEV(Boxes, {\n    value: valueGenerated.value,\n    isPressed: valueGenerated.isPressed,\n    id: valueGenerated.id,\n    structureOfBox: () => structureOfBox(valueGenerated.id)\n  }, valueGenerated.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n\n  function setGame() {\n    setBox(prevBox => prevBox.map(box => {\n      return box.isPressed ? box : {\n        generateNewBox\n      };\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: boxElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll\",\n      onClick: setGame,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zfCMIm59fEAQYqVrvaGvIIc5f/g=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Boxes","nanoid","App","box","setBox","generateBoxes","generateNewBox","value","Math","floor","random","isPressed","id","boxes","i","push","structureOfBox","prevBox","map","boxElements","valueGenerated","setGame"],"sources":["G:/03 Projects React/app-tenzi/tenzi/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './index.css';\nimport Boxes from './components/Boxes/Boxes.js';\nimport {nanoid} from 'nanoid'\n\nexport default function App() {  \n\n  const [box, setBox] = useState(generateBoxes())\n\n  function generateNewBox() { \n    return {   \n      value: Math.floor(Math.random() * 6) + 1, \n      isPressed: false,\n      id: nanoid()\n    }\n  }\n\n  function generateBoxes() {\n    const boxes= [];\n    for (let i = 0; i < 10; ++i) {\n      boxes.push(generateNewBox())    \n    }\n    return boxes\n  }\n\n  function structureOfBox(id) {\n    setBox(prevBox => prevBox.map(box => {\n      return box.id === id ? {...box, isPressed: !box.isPressed} : box\n    }))\n  }\n\n  const boxElements = box.map(valueGenerated => (\n    <Boxes key={valueGenerated.id} value = {valueGenerated.value} isPressed={valueGenerated.isPressed} id={valueGenerated.id} structureOfBox={() => structureOfBox(valueGenerated.id)}/>\n  ))\n\n  function setGame() {\n    setBox(prevBox => prevBox.map(box => {\n      return box.isPressed ? \n      box : \n      {generateNewBox}\n    }))\n  }\n\n  return (\n    <main> \n      <div className='container'>\n        {boxElements}\n      </div>\n      <button className='roll' onClick={setGame}><strong>ROLL</strong></button>           \n    </main>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE5B,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAACM,aAAa,EAAd,CAA9B;;EAEA,SAASC,cAAT,GAA0B;IACxB,OAAO;MACLC,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CADlC;MAELC,SAAS,EAAE,KAFN;MAGLC,EAAE,EAAEX,MAAM;IAHL,CAAP;EAKD;;EAED,SAASI,aAAT,GAAyB;IACvB,MAAMQ,KAAK,GAAE,EAAb;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwB,EAAEA,CAA1B,EAA6B;MAC3BD,KAAK,CAACE,IAAN,CAAWT,cAAc,EAAzB;IACD;;IACD,OAAOO,KAAP;EACD;;EAED,SAASG,cAAT,CAAwBJ,EAAxB,EAA4B;IAC1BR,MAAM,CAACa,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAYf,GAAG,IAAI;MACnC,OAAOA,GAAG,CAACS,EAAJ,KAAWA,EAAX,GAAgB,EAAC,GAAGT,GAAJ;QAASQ,SAAS,EAAE,CAACR,GAAG,CAACQ;MAAzB,CAAhB,GAAsDR,GAA7D;IACD,CAFiB,CAAZ,CAAN;EAGD;;EAED,MAAMgB,WAAW,GAAGhB,GAAG,CAACe,GAAJ,CAAQE,cAAc,iBACxC,QAAC,KAAD;IAA+B,KAAK,EAAIA,cAAc,CAACb,KAAvD;IAA8D,SAAS,EAAEa,cAAc,CAACT,SAAxF;IAAmG,EAAE,EAAES,cAAc,CAACR,EAAtH;IAA0H,cAAc,EAAE,MAAMI,cAAc,CAACI,cAAc,CAACR,EAAhB;EAA9J,GAAYQ,cAAc,CAACR,EAA3B;IAAA;IAAA;IAAA;EAAA,QADkB,CAApB;;EAIA,SAASS,OAAT,GAAmB;IACjBjB,MAAM,CAACa,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAYf,GAAG,IAAI;MACnC,OAAOA,GAAG,CAACQ,SAAJ,GACPR,GADO,GAEP;QAACG;MAAD,CAFA;IAGD,CAJiB,CAAZ,CAAN;EAKD;;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGa;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAQ,SAAS,EAAC,MAAlB;MAAyB,OAAO,EAAEE,OAAlC;MAAA,uBAA2C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA3C;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA9CuBnB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}