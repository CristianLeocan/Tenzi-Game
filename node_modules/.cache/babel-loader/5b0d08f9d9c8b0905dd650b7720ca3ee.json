{"ast":null,"code":"var _jsxFileName = \"G:\\\\03 Projects React\\\\app-tenzi\\\\tenzi\\\\src\\\\components\\\\Record\\\\Record.js\";\nimport './record.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ranking(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"records\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recordsinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Record:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bold\",\n        children: props.record ? props.record : \"No Games played\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recordsinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Current Rolls:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bold\",\n        children: props.trys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n/*let initialResult = [];\r\ninitialResult[0] = \"PLAYER 1 - RESULT \";\r\ninitialResult[1] = \"PLAYER 2 - RESULT \";\r\ninitialResult[2] = \"PLAYER 3 - RESULT \";\r\n\r\nconst [ranking, setRanking] = useState ({\r\n  first: \"PLAYER 1 - result undefined\",\r\n  second: \"PLAYER 2 - result undefined\",\r\n  third: \"PLAYER 3 - result undefined\",\r\n  })\r\n    useEffect(() => {\r\n    localStorage.setItem('score', JSON.stringify(ranking));\r\n}, [ranking]);\r\n  useEffect(() => {\r\n  const ranking = JSON.parse(localStorage.getItem('score'));\r\n  setRanking(ranking);    \r\n},[]);  \r\n\r\nlet score1st = 0;\r\nlet score2nd = 0;\r\nlet score3rd = 0;\r\n\r\nif (props.score > score1st && props.score > 5) {\r\n  ranking.first = `${props.nickName}  - RESULT  ${props.score}`\r\n  score1st = props.score;\r\n} else if (props.score > score2nd && props.score > 5) {\r\n  ranking.second = `${props.nickName}  - RESULT  ${props.score}`\r\n  score2nd = props.score;\r\n} else  if (props.score > score3rd && props.score > 5) {\r\n  ranking.third= `${props.nickName}  - RESULT  ${props.score}`\r\n  score3rd = props.score;    \r\n}\r\nconsole.log(ranking)\r\n*/\n\n/* useEffect(() => {\r\n   const updateRanking = localStorage.getItem('score'); \r\n   setRanking(JSON.parse(updateRanking))    \r\n },[]);  \r\n\n useEffect(() => {\r\n   localStorage.setItem('score', JSON.stringify(ranking));\r\n }, [ranking]);*/\n\n_c = Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"names":["Ranking","props","record","trys"],"sources":["G:/03 Projects React/app-tenzi/tenzi/src/components/Record/Record.js"],"sourcesContent":["import './record.css';\r\n\r\nexport default function Ranking(props) { \r\n  return (\r\n    <div className=\"records\">\r\n        <div className=\"recordsinfo\">\r\n            <div>Record:</div>\r\n            <div className=\"bold\">{props.record ? props.record : \"No Games played\"}</div>\r\n        </div>\r\n        <div className=\"recordsinfo\">\r\n            <div>Current Rolls:</div>\r\n            <div className=\"bold\">{props.trys}</div>\r\n        </div>\r\n    </div>\r\n  )\r\n  }\r\n  \r\n  /*let initialResult = [];\r\n  initialResult[0] = \"PLAYER 1 - RESULT \";\r\n  initialResult[1] = \"PLAYER 2 - RESULT \";\r\n  initialResult[2] = \"PLAYER 3 - RESULT \";\r\n  \r\n  const [ranking, setRanking] = useState ({\r\n    first: \"PLAYER 1 - result undefined\",\r\n    second: \"PLAYER 2 - result undefined\",\r\n    third: \"PLAYER 3 - result undefined\",\r\n    })\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem('score', JSON.stringify(ranking));\r\n  }, [ranking]);\r\n\r\n  useEffect(() => {\r\n    const ranking = JSON.parse(localStorage.getItem('score'));\r\n    setRanking(ranking);    \r\n  },[]);  \r\n  \r\n  let score1st = 0;\r\n  let score2nd = 0;\r\n  let score3rd = 0;\r\n  \r\n  if (props.score > score1st && props.score > 5) {\r\n    ranking.first = `${props.nickName}  - RESULT  ${props.score}`\r\n    score1st = props.score;\r\n  } else if (props.score > score2nd && props.score > 5) {\r\n    ranking.second = `${props.nickName}  - RESULT  ${props.score}`\r\n    score2nd = props.score;\r\n  } else  if (props.score > score3rd && props.score > 5) {\r\n    ranking.third= `${props.nickName}  - RESULT  ${props.score}`\r\n    score3rd = props.score;    \r\n  }\r\n  console.log(ranking)\r\n  */\r\n  /* useEffect(() => {\r\n     const updateRanking = localStorage.getItem('score'); \r\n     setRanking(JSON.parse(updateRanking))    \r\n   },[]);  \r\n \r\n   useEffect(() => {\r\n     localStorage.setItem('score', JSON.stringify(ranking));\r\n   }, [ranking]);*/\r\n   "],"mappings":";AAAA,OAAO,cAAP;;AAEA,eAAe,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;EACrC,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACI;MAAK,SAAS,EAAC,aAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,MAAf;QAAA,UAAuBA,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACC,MAArB,GAA8B;MAArD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,aAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,MAAf;QAAA,UAAuBD,KAAK,CAACE;MAA7B;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYC;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;KA1DwBH,O"},"metadata":{},"sourceType":"module"}