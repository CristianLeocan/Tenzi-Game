{"ast":null,"code":"var _jsxFileName = \"G:\\\\03 Projects React\\\\app-tenzi\\\\tenzi\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport Tenzi from './Images/tenzi.jpg';\nimport Boxes from './components/Boxes/Boxes.js';\nimport { nanoid } from 'nanoid';\nimport Timer from './components/Timer/Timer';\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [box, setBox] = useState(generateBoxes());\n  const [won, setWon] = useState(false);\n  let numberOfBoxes = 10;\n  useEffect(() => {\n    const allBox = box.every(item => item.isPressed);\n    const firstValue = box[0].value;\n    const allValue = box.every(item => item.value === firstValue);\n\n    if (allBox && allValue) {\n      setWon(true);\n    }\n  }, [box]);\n\n  function generateNewBox() {\n    return {\n      value: Math.floor(Math.random() * 6) + 1,\n      isPressed: false,\n      id: nanoid()\n    };\n  } // set difficulty\n\n\n  function generateBoxes() {\n    const boxes = [];\n\n    for (let i = 0; i < {\n      numberOfBoxes\n    }; ++i) {\n      boxes.push(generateNewBox());\n    }\n\n    return boxes;\n  }\n\n  console.log(numberOfBoxes);\n\n  function structureOfBox(id) {\n    if (intervalId) {\n      setBox(prevBox => prevBox.map(box => {\n        return box.id === id ? { ...box,\n          isPressed: !box.isPressed\n        } : box;\n      }));\n    }\n  }\n\n  const boxElements = box.map(valueGenerated => /*#__PURE__*/_jsxDEV(Boxes, {\n    value: valueGenerated.value,\n    isPressed: valueGenerated.isPressed,\n    id: valueGenerated.id,\n    structureOfBox: () => structureOfBox(valueGenerated.id)\n  }, valueGenerated.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n\n  function setGame() {\n    if (!won) {\n      if (intervalId) {\n        setBox(prevBox => prevBox.map(box => {\n          return box.isPressed ? box : generateNewBox();\n        }));\n      }\n    } else {\n      setWon(false);\n      setBox(generateBoxes());\n      setSeconds(0);\n      setMinutes(0);\n      count = 0;\n    }\n  } //-----------------Timer----------------------\n\n\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [intervalId, setIntervalId] = useState(0);\n  let count = 0;\n\n  const startStop = () => {\n    if (intervalId) {\n      count = seconds;\n      clearInterval(intervalId);\n      setIntervalId(0);\n      return;\n    }\n\n    const newIntervalId = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n      ++count;\n\n      if (count % 59 === 0) {\n        setSeconds(0);\n        setMinutes(prevMinutes => prevMinutes + 1);\n      }\n    }, 1000);\n    setIntervalId(newIntervalId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [won && startStop && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sec--title\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Tenzi,\n        alt: \"Tenzi\",\n        className: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      seconds: seconds,\n      minutes: minutes,\n      intervalId: intervalId,\n      startStop: startStop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: boxElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll\",\n      onClick: setGame,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: won ? \"New Game\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"double\",\n      children: \"Increases the difficulty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cyWbWM5cokhYkK/VRTs2e0H6GE0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Tenzi","Boxes","nanoid","Timer","Confetti","App","box","setBox","generateBoxes","won","setWon","numberOfBoxes","allBox","every","item","isPressed","firstValue","value","allValue","generateNewBox","Math","floor","random","id","boxes","i","push","console","log","structureOfBox","intervalId","prevBox","map","boxElements","valueGenerated","setGame","setSeconds","setMinutes","count","seconds","minutes","setIntervalId","startStop","clearInterval","newIntervalId","setInterval","prevSeconds","prevMinutes"],"sources":["G:/03 Projects React/app-tenzi/tenzi/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './index.css';\nimport Tenzi from './Images/tenzi.jpg';\nimport Boxes from './components/Boxes/Boxes.js';\nimport {nanoid} from 'nanoid';\nimport Timer from './components/Timer/Timer'\nimport Confetti from 'react-confetti';\n\nexport default function App() { \n  const [box, setBox] = useState(generateBoxes())\n  const [won, setWon] = useState(false)\n  let numberOfBoxes = 10  \n\n  useEffect(() => {\n     const allBox = box.every(item =>item.isPressed)\n     const firstValue = box[0].value\n     const allValue = box.every(item => item.value === firstValue)\n     if (allBox && allValue) {\n        setWon(true)        \n     }\n  }, [box])\n\n  function generateNewBox() { \n    return {   \n      value: Math.floor(Math.random() * 6) + 1, \n      isPressed: false,\n      id: nanoid(),      \n    }\n  }\n\n// set difficulty\n\n \n\n  function generateBoxes() {\n    const boxes= [];\n    for (let i = 0; i < {numberOfBoxes}; ++i) {\n      boxes.push(generateNewBox())    \n    }\n    return boxes\n  }\n\n  console.log(numberOfBoxes)\n\n  function structureOfBox(id) {\n    if (intervalId) {\n      setBox(prevBox => prevBox.map(box => {\n        return box.id === id ? {...box, isPressed: !box.isPressed} : box\n      }))\n    }\n  } \n\n  const boxElements = box.map(valueGenerated => (    \n    <Boxes key={valueGenerated.id} value = {valueGenerated.value} isPressed={valueGenerated.isPressed} id={valueGenerated.id} structureOfBox={() => structureOfBox(valueGenerated.id)}/>\n  ))\n\n  function setGame() {    \n    if(!won) { \n      if(intervalId) {\n        setBox(prevBox => prevBox.map(box => {\n          return box.isPressed ? \n          box : \n          generateNewBox()\n        }))\n      }\n    } else {      \n      setWon(false)\n      setBox(generateBoxes())\n      setSeconds(0);\n      setMinutes(0);\n      count = 0;\n    }\n  }\n\n//-----------------Timer----------------------\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [intervalId, setIntervalId] = useState(0);\n  let count = 0;   \n\n  const startStop = () => {\n    if (intervalId) {\n      count = seconds;            \n      clearInterval(intervalId);\n      setIntervalId(0);            \n      return;\n    }    \n\n    const newIntervalId = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n        ++count;            \n        if (count % 59 === 0) {\n          setSeconds(0);\n          setMinutes(prevMinutes => prevMinutes + 1);                    \n        }\n    }, 1000); \n    setIntervalId(newIntervalId);    \n  };\n\n  return (\n    <main>\n      {won && startStop && <Confetti/>} \n      <div className='sec--title'>\n        <img src={Tenzi} alt=\"Tenzi\" className='title'/>        \n      </div>     \n      <Timer \n        seconds={seconds}\n        minutes={minutes}\n        intervalId={intervalId}\n        startStop={startStop}        \n      />\n      <div className='container'>           \n        {boxElements}\n      </div>\n      <button \n        className='roll' \n        onClick={setGame} \n        > \n          <strong>{won ? \"New Game\" : \"ROLL\"}</strong>\n      </button>   \n      <button \n        className='double'        \n      > \n        Increases the difficulty\n      </button>      \n    </main>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}