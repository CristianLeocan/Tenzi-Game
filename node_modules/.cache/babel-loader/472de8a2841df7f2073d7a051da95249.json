{"ast":null,"code":"var _jsxFileName = \"G:\\\\03 Projects React\\\\app-tenzi\\\\tenzi\\\\src\\\\components\\\\Ranking\\\\Ranking.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './ranking.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ranking(props) {\n  _s();\n\n  let firstPosition = 0;\n  let secondPosition = 0;\n  let thirdPosition = 0;\n  let afresh = 'try again';\n  const [ranking, setRanking] = useState({\n    first: 'Player 1',\n    second: 'Player 2',\n    third: 'Player 3',\n    message: ''\n  });\n  useEffect(() => {\n    localStorage.setItem('score', JSON.stringify(ranking));\n  }, [ranking]);\n  useEffect(() => {\n    let updateRanking = localStorage.getItem('score');\n    setRanking(JSON.parse(updateRanking));\n  }, []);\n\n  if (props.won && props.score > firstPosition) {\n    ranking.first = `${props.nickName} finish in ${props.score} seconds`;\n  } else if (props.won && props.score > secondPosition) {\n    ranking.second = `${props.nickName} finish in ${props.score} seconds`;\n  } else if (props.won && props.score > thirdPosition) {\n    ranking.third = `${props.nickName} finish in ${props.score} seconds`;\n  } else {\n    ranking.message = afresh;\n  }\n\n  console.log(ranking);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Choose a nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"name\",\n        type: \"text\",\n        placeholder: \"enter nickname here\",\n        onChange: props.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My result is: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.won && ranking.first\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n/*let initialResult = [];\r\ninitialResult[0] = \"PLAYER 1 - RESULT \";\r\ninitialResult[1] = \"PLAYER 2 - RESULT \";\r\ninitialResult[2] = \"PLAYER 3 - RESULT \";\r\n\r\nconst [ranking, setRanking] = useState ({\r\n  first: \"PLAYER 1 - result undefined\",\r\n  second: \"PLAYER 2 - result undefined\",\r\n  third: \"PLAYER 3 - result undefined\",\r\n  })\r\n    useEffect(() => {\r\n    localStorage.setItem('score', JSON.stringify(ranking));\r\n}, [ranking]);\r\n  useEffect(() => {\r\n  const ranking = JSON.parse(localStorage.getItem('score'));\r\n  setRanking(ranking);    \r\n},[]);  \r\n\r\nlet score1st = 0;\r\nlet score2nd = 0;\r\nlet score3rd = 0;\r\n\r\nif (props.score > score1st && props.score > 5) {\r\n  ranking.first = `${props.nickName}  - RESULT  ${props.score}`\r\n  score1st = props.score;\r\n} else if (props.score > score2nd && props.score > 5) {\r\n  ranking.second = `${props.nickName}  - RESULT  ${props.score}`\r\n  score2nd = props.score;\r\n} else  if (props.score > score3rd && props.score > 5) {\r\n  ranking.third= `${props.nickName}  - RESULT  ${props.score}`\r\n  score3rd = props.score;    \r\n}\r\nconsole.log(ranking)\r\n*/\n\n/* useEffect(() => {\r\n   const updateRanking = localStorage.getItem('score'); \r\n   setRanking(JSON.parse(updateRanking))    \r\n },[]);  \r\n\n useEffect(() => {\r\n   localStorage.setItem('score', JSON.stringify(ranking));\r\n }, [ranking]);*/\n\n_s(Ranking, \"lycF+LyjJW3jBmteKdIcU28fzxk=\");\n\n_c = Ranking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ranking\");","map":{"version":3,"names":["useState","useEffect","Ranking","props","firstPosition","secondPosition","thirdPosition","afresh","ranking","setRanking","first","second","third","message","localStorage","setItem","JSON","stringify","updateRanking","getItem","parse","won","score","nickName","console","log","handleChange"],"sources":["G:/03 Projects React/app-tenzi/tenzi/src/components/Ranking/Ranking.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './ranking.css';\r\n\r\nexport default function Ranking(props) { \r\n  let firstPosition = 0;\r\n  let secondPosition = 0;\r\n  let thirdPosition = 0;\r\n  let afresh = 'try again';\r\n  const  [ranking, setRanking] = useState({\r\n    first: 'Player 1',\r\n    second: 'Player 2',\r\n    third: 'Player 3',\r\n    message:'',\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('score', JSON.stringify(ranking));\r\n  }, [ranking]);\r\n\r\n  useEffect(() => {\r\n    let updateRanking = localStorage.getItem('score'); \r\n    setRanking(JSON.parse(updateRanking))    \r\n  },[]);  \r\n\r\n  if (props.won && props.score > firstPosition) {\r\n    ranking.first = `${props.nickName} finish in ${props.score} seconds`;\r\n  } else if (props.won && props.score > secondPosition) {\r\n    ranking.second = `${props.nickName} finish in ${props.score} seconds`;\r\n  } else if (props.won && props.score > thirdPosition) {\r\n    ranking.third = `${props.nickName} finish in ${props.score} seconds`;\r\n  } else {\r\n    ranking.message = afresh;\r\n  }\r\n\r\n  console.log(ranking)\r\n  \r\n  return (\r\n    <div>\r\n       <div>\r\n          <h1>Choose a nickname</h1> \r\n          <br/>\r\n          <input\r\n            className='name'\r\n            type=\"text\"\r\n            placeholder=\"enter nickname here\"                  \r\n            onChange={props.handleChange}\r\n            >        \r\n          </input>       \r\n        </div>\r\n        <h2>My result is: </h2>\r\n        <div>\r\n          {props.won && ranking.first}\r\n        </div>\r\n        <br/> <br/>\r\n           \r\n      </div>\r\n    )\r\n  }\r\n  \r\n  /*let initialResult = [];\r\n  initialResult[0] = \"PLAYER 1 - RESULT \";\r\n  initialResult[1] = \"PLAYER 2 - RESULT \";\r\n  initialResult[2] = \"PLAYER 3 - RESULT \";\r\n  \r\n  const [ranking, setRanking] = useState ({\r\n    first: \"PLAYER 1 - result undefined\",\r\n    second: \"PLAYER 2 - result undefined\",\r\n    third: \"PLAYER 3 - result undefined\",\r\n    })\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem('score', JSON.stringify(ranking));\r\n  }, [ranking]);\r\n\r\n  useEffect(() => {\r\n    const ranking = JSON.parse(localStorage.getItem('score'));\r\n    setRanking(ranking);    \r\n  },[]);  \r\n  \r\n  let score1st = 0;\r\n  let score2nd = 0;\r\n  let score3rd = 0;\r\n  \r\n  if (props.score > score1st && props.score > 5) {\r\n    ranking.first = `${props.nickName}  - RESULT  ${props.score}`\r\n    score1st = props.score;\r\n  } else if (props.score > score2nd && props.score > 5) {\r\n    ranking.second = `${props.nickName}  - RESULT  ${props.score}`\r\n    score2nd = props.score;\r\n  } else  if (props.score > score3rd && props.score > 5) {\r\n    ranking.third= `${props.nickName}  - RESULT  ${props.score}`\r\n    score3rd = props.score;    \r\n  }\r\n  console.log(ranking)\r\n  */\r\n  /* useEffect(() => {\r\n     const updateRanking = localStorage.getItem('score'); \r\n     setRanking(JSON.parse(updateRanking))    \r\n   },[]);  \r\n \r\n   useEffect(() => {\r\n     localStorage.setItem('score', JSON.stringify(ranking));\r\n   }, [ranking]);*/\r\n   "],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACrC,IAAIC,aAAa,GAAG,CAApB;EACA,IAAIC,cAAc,GAAG,CAArB;EACA,IAAIC,aAAa,GAAG,CAApB;EACA,IAAIC,MAAM,GAAG,WAAb;EACA,MAAO,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;IACtCU,KAAK,EAAE,UAD+B;IAEtCC,MAAM,EAAE,UAF8B;IAGtCC,KAAK,EAAE,UAH+B;IAItCC,OAAO,EAAC;EAJ8B,CAAD,CAAvC;EAOAZ,SAAS,CAAC,MAAM;IACda,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAA9B;EACD,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;EAIAP,SAAS,CAAC,MAAM;IACd,IAAIiB,aAAa,GAAGJ,YAAY,CAACK,OAAb,CAAqB,OAArB,CAApB;IACAV,UAAU,CAACO,IAAI,CAACI,KAAL,CAAWF,aAAX,CAAD,CAAV;EACD,CAHQ,EAGP,EAHO,CAAT;;EAKA,IAAIf,KAAK,CAACkB,GAAN,IAAalB,KAAK,CAACmB,KAAN,GAAclB,aAA/B,EAA8C;IAC5CI,OAAO,CAACE,KAAR,GAAiB,GAAEP,KAAK,CAACoB,QAAS,cAAapB,KAAK,CAACmB,KAAM,UAA3D;EACD,CAFD,MAEO,IAAInB,KAAK,CAACkB,GAAN,IAAalB,KAAK,CAACmB,KAAN,GAAcjB,cAA/B,EAA+C;IACpDG,OAAO,CAACG,MAAR,GAAkB,GAAER,KAAK,CAACoB,QAAS,cAAapB,KAAK,CAACmB,KAAM,UAA5D;EACD,CAFM,MAEA,IAAInB,KAAK,CAACkB,GAAN,IAAalB,KAAK,CAACmB,KAAN,GAAchB,aAA/B,EAA8C;IACnDE,OAAO,CAACI,KAAR,GAAiB,GAAET,KAAK,CAACoB,QAAS,cAAapB,KAAK,CAACmB,KAAM,UAA3D;EACD,CAFM,MAEA;IACLd,OAAO,CAACK,OAAR,GAAkBN,MAAlB;EACD;;EAEDiB,OAAO,CAACC,GAAR,CAAYjB,OAAZ;EAEA,oBACE;IAAA,wBACG;MAAA,wBACG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADH,eAEG;QAAA;QAAA;QAAA;MAAA,QAFH,eAGG;QACE,SAAS,EAAC,MADZ;QAEE,IAAI,EAAC,MAFP;QAGE,WAAW,EAAC,qBAHd;QAIE,QAAQ,EAAEL,KAAK,CAACuB;MAJlB;QAAA;QAAA;QAAA;MAAA,QAHH;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAYI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZJ,eAaI;MAAA,UACGvB,KAAK,CAACkB,GAAN,IAAab,OAAO,CAACE;IADxB;MAAA;MAAA;MAAA;IAAA,QAbJ,eAgBI;MAAA;MAAA;MAAA;IAAA,QAhBJ,oBAgBU;MAAA;MAAA;MAAA;IAAA,QAhBV;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBC;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;GAnGwBR,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}