{"ast":null,"code":"var _jsxFileName = \"G:\\\\03 Projects React\\\\app-tenzi\\\\tenzi\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './index.css';\nimport Header from './components/Header/Header';\nimport Boxes from './components/Boxes/Boxes.js';\nimport { nanoid } from 'nanoid';\nimport Timer from './components/Timer/Timer';\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [box, setBox] = useState(generateInitialBoxes());\n  const [won, setWon] = useState(false); // ---------------Ranking -----------------------\n\n  const [ranking, setRanking] = useState(() => JSON.parse(localStorage.getItem(0)) || []);\n  useEffect(() => {\n    localStorage.setItem(0, JSON.stringify(count));\n  }, [count]); //-----------------------------------------------\n\n  useEffect(() => {\n    const allBox = box.every(item => item.isPressed);\n    const firstValue = box[0].value;\n    const allValue = box.every(item => item.value === firstValue);\n\n    if (allBox && allValue) {\n      setWon(true);\n    }\n  }, [box]);\n\n  function generateNewBox() {\n    return {\n      value: Math.floor(Math.random() * 6) + 1,\n      isPressed: false,\n      id: nanoid()\n    };\n  }\n\n  function generateInitialBoxes() {\n    const boxes = [];\n\n    for (let i = 0; i < 10; ++i) {\n      boxes.push(generateNewBox());\n    }\n\n    return boxes;\n  }\n\n  function structureOfBox(id) {\n    if (intervalId) {\n      setBox(prevBox => prevBox.map(box => {\n        return box.id === id ? { ...box,\n          isPressed: !box.isPressed\n        } : box;\n      }));\n    }\n  }\n\n  const boxElements = box.map(valueGenerated => /*#__PURE__*/_jsxDEV(Boxes, {\n    value: valueGenerated.value,\n    isPressed: valueGenerated.isPressed,\n    id: valueGenerated.id,\n    structureOfBox: () => structureOfBox(valueGenerated.id)\n  }, valueGenerated.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n\n  function setGame() {\n    if (!won) {\n      if (intervalId) {\n        setBox(prevBox => prevBox.map(box => {\n          return box.isPressed ? box : generateNewBox();\n        }));\n      }\n    } else {\n      setWon(false);\n      setBox(generateInitialBoxes());\n      setSeconds(0);\n      setMinutes(0);\n      setRanking(count);\n      count = 0;\n    }\n  } //-----------------Timer----------------------\n\n\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [intervalId, setIntervalId] = useState(0);\n  let count = 0;\n\n  const startStop = () => {\n    if (intervalId) {\n      count = seconds;\n      clearInterval(intervalId);\n      setIntervalId(0);\n      return;\n    }\n\n    const newIntervalId = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n      ++count;\n\n      if (count % 59 === 0) {\n        setSeconds(0);\n        setMinutes(prevMinutes => prevMinutes + 1);\n      }\n    }, 1000);\n    setIntervalId(newIntervalId);\n  };\n\n  console.log(ranking); //-----------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [won && startStop && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        seconds: seconds,\n        minutes: minutes,\n        intervalId: intervalId,\n        startStop: startStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: boxElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"roll\",\n        onClick: setGame,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: won ? \"New Game\" : \"ROLL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Kgww1l5wLs1ZD5VJEOWKJQtt6Ew=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Boxes","nanoid","Timer","Confetti","App","box","setBox","generateInitialBoxes","won","setWon","ranking","setRanking","JSON","parse","localStorage","getItem","setItem","stringify","count","allBox","every","item","isPressed","firstValue","value","allValue","generateNewBox","Math","floor","random","id","boxes","i","push","structureOfBox","intervalId","prevBox","map","boxElements","valueGenerated","setGame","setSeconds","setMinutes","seconds","minutes","setIntervalId","startStop","clearInterval","newIntervalId","setInterval","prevSeconds","prevMinutes","console","log"],"sources":["G:/03 Projects React/app-tenzi/tenzi/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport './index.css';\nimport Header from './components/Header/Header'\nimport Boxes from './components/Boxes/Boxes.js';\nimport {nanoid} from 'nanoid';\nimport Timer from './components/Timer/Timer';\nimport Confetti from 'react-confetti';\n\n\nexport default function App() {\n  const [box, setBox] = useState(generateInitialBoxes())\n  const [won, setWon] = useState(false) \n\n// ---------------Ranking -----------------------\n  const [ranking, setRanking] = useState (\n    () => JSON.parse(localStorage.getItem(0)) || []\n  )\n\n  useEffect(() => {\n    localStorage.setItem(0, JSON.stringify(count))\n}, [count])\n\n//-----------------------------------------------\n\n  useEffect(() => {\n     const allBox = box.every(item =>item.isPressed)\n     const firstValue = box[0].value\n     const allValue = box.every(item => item.value === firstValue)\n     if (allBox && allValue) {\n        setWon(true)\n     }\n  }, [box])\n\n  function generateNewBox() {\n    return {\n      value: Math.floor(Math.random() * 6) + 1,\n      isPressed: false,\n      id: nanoid(),\n    }\n  }\n\n  function generateInitialBoxes() {\n    const boxes= [];    \n    for (let i = 0; i < 10; ++i) {\n      boxes.push(generateNewBox())\n    }   \n  return boxes    \n  }\n\n  function structureOfBox(id) {\n    if (intervalId) {\n      setBox(prevBox => prevBox.map(box => {\n        return box.id === id ? {...box, isPressed: !box.isPressed} : box\n      }))\n    }\n  }\n\n  const boxElements = box.map(valueGenerated => (    \n    <Boxes key={valueGenerated.id} value = {valueGenerated.value} isPressed={valueGenerated.isPressed} id={valueGenerated.id} structureOfBox={() => structureOfBox(valueGenerated.id)}/>\n  ))\n\n  function setGame() {\n    if(!won) {\n      if(intervalId) {\n        setBox(prevBox => prevBox.map(box => {\n          return box.isPressed ? \n          box :\n          generateNewBox()\n        }))\n      }\n    } else {\n      setWon(false)\n      setBox(generateInitialBoxes())\n      setSeconds(0);\n      setMinutes(0);\n      setRanking(count)\n      count = 0;\n    }\n  }\n\n//-----------------Timer----------------------\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [intervalId, setIntervalId] = useState(0);\n  let count = 0;  \n\n  const startStop = () => {\n    if (intervalId) {\n      count = seconds;\n      clearInterval(intervalId);\n      setIntervalId(0);\n      return;\n    }\n\n    const newIntervalId = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n        ++count; \n        if (count % 59 === 0) {\n          setSeconds(0);\n          setMinutes(prevMinutes => prevMinutes + 1);                    \n        }\n    }, 1000); \n    setIntervalId(newIntervalId);\n  };  \n\n  console.log(ranking)\n//-----------------------------------------------\n  return (\n    <main>\n      <div>\n        {won && startStop && <Confetti/>} \n        <Header /> \n        <Timer \n          seconds={seconds}\n          minutes={minutes}\n          intervalId={intervalId}\n          startStop={startStop}        \n        />\n        <div className='container'> \n          {boxElements}\n        </div>\n        <button \n          className='roll' \n          onClick={setGame} \n          > \n            <strong>{won ? \"New Game\" : \"ROLL\"}</strong>\n        </button> \n      </div>      \n    </main>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}