{"ast":null,"code":"var _jsxFileName = \"G:\\\\03 Projects React\\\\app-tenzi\\\\tenzi\\\\src\\\\components\\\\Timer\\\\Timer.js\";\nimport './timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section--timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"timer\",\n      children: [props.minutes < 10 ? `0${props.minutes}` : props.minutes, \":\", props.seconds < 10 ? `0${props.seconds}` : props.seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.startStop,\n        className: \"startStop\",\n        children: props.intervalId ? \"Stop\" : \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n/*\r\nconst [seconds, setSeconds] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [intervalId, setIntervalId] = useState(0);\r\n\r\n    let count = 0;   \r\n\r\n    const handleClick = () => {\r\n        if (intervalId) {            \r\n            clearInterval(intervalId);\r\n            setIntervalId(0);            \r\n            return;\r\n        }    \r\n\r\n        const newIntervalId = setInterval(() => {\r\n            setSeconds(prevSeconds => prevSeconds + 1);\r\n            ++count;            \r\n            if (count % 59 === 0) {\r\n                setSeconds(0);\r\n                setMinutes(prevMinutes => prevMinutes + 1);                    \r\n            }\r\n        }, 1000);  \r\n            \r\n        setIntervalId(newIntervalId);\r\n    };\r\n    */\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["Timer","props","minutes","seconds","startStop","intervalId"],"sources":["G:/03 Projects React/app-tenzi/tenzi/src/components/Timer/Timer.js"],"sourcesContent":["import './timer.css';\r\n\r\n\r\nexport default function Timer(props) {        \r\n\r\n   return (\r\n    <div className='section--timer'>\r\n        <span className='timer'>\r\n            {props.minutes < 10 ? `0${props.minutes}` : props.minutes}:{props.seconds < 10 ? `0${props.seconds}` : props.seconds}            \r\n        </span> \r\n        <span>\r\n            <button onClick={props.startStop} className=\"startStop\">\r\n                 {props.intervalId ? \"Stop\" : \"Start\"}\r\n            </button>    \r\n        </span>        \r\n     </div>     \r\n   )\r\n}\r\n\r\n/*\r\nconst [seconds, setSeconds] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [intervalId, setIntervalId] = useState(0);\r\n\r\n    let count = 0;   \r\n\r\n    const handleClick = () => {\r\n        if (intervalId) {            \r\n            clearInterval(intervalId);\r\n            setIntervalId(0);            \r\n            return;\r\n        }    \r\n\r\n        const newIntervalId = setInterval(() => {\r\n            setSeconds(prevSeconds => prevSeconds + 1);\r\n            ++count;            \r\n            if (count % 59 === 0) {\r\n                setSeconds(0);\r\n                setMinutes(prevMinutes => prevMinutes + 1);                    \r\n            }\r\n        }, 1000);  \r\n            \r\n        setIntervalId(newIntervalId);\r\n    };\r\n    */"],"mappings":";AAAA,OAAO,aAAP;;AAGA,eAAe,SAASA,KAAT,CAAeC,KAAf,EAAsB;EAElC,oBACC;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACI;MAAM,SAAS,EAAC,OAAhB;MAAA,WACKA,KAAK,CAACC,OAAN,GAAgB,EAAhB,GAAsB,IAAGD,KAAK,CAACC,OAAQ,EAAvC,GAA2CD,KAAK,CAACC,OADtD,OACgED,KAAK,CAACE,OAAN,GAAgB,EAAhB,GAAsB,IAAGF,KAAK,CAACE,OAAQ,EAAvC,GAA2CF,KAAK,CAACE,OADjH;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAA,uBACI;QAAQ,OAAO,EAAEF,KAAK,CAACG,SAAvB;QAAkC,SAAS,EAAC,WAA5C;QAAA,UACMH,KAAK,CAACI,UAAN,GAAmB,MAAnB,GAA4B;MADlC;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAYF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAzCwBL,K"},"metadata":{},"sourceType":"module"}